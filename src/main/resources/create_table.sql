CREATE TABLE HOSPITAL (
  	HOSPITAL_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(50)
  , DESCRIPTION VARCHAR(1000)
  , ADDRESS VARCHAR(64) NOT NULL
  , EMAIL_ADDRESS VARCHAR(64) NOT NULL
  , PHONE_NUMBER VARCHAR(20)
  , LOGO VARCHAR(250)
  , FAVICON VARCHAR(250)
  , COPYRIGHT VARCHAR(250)
  , TWITTER_API VARCHAR(250)
  , GOOGLE_MAP VARCHAR(1000)
  , FACEBOOK_URL VARCHAR(100)
  , TWITTER_URL VARCHAR(100)
  , INSTAGRAM_URL VARCHAR(100)
  , GOOGLE_PLUS_URL VARCHAR(100)
  , DRIBBBLE_URL VARCHAR(100)
  , SKYPE_URL VARCHAR(100)
  , VIMEO_URL VARCHAR(100)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (HOSPITAL_ID)
);

CREATE TABLE PAYER_TYPE (
  	PAYER_TYPE_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (PAYER_TYPE_ID)
);

CREATE TABLE PRESCRIPTION_TYPE (
  	PRESCRIPTION_TYPE_ID TINYINT NOT NULL
  , NAME VARCHAR(64) NOT NULL
);

CREATE TABLE MARITAL_STATUS (
  	MARITAL_STATUS_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(20) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (MARITAL_STATUS_ID)
);

CREATE TABLE DOCTOR_ORDER_TYPE (
  	DOCTOR_ORDER_TYPE_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (DOCTOR_ORDER_TYPE_ID)
);

CREATE TABLE DOCTOR_ORDER_STATUS (
  	DOCTOR_ORDER_STATUS_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (DOCTOR_ORDER_STATUS_ID)
);

CREATE TABLE DOCTOR_ORDER_PRIORITY (
  	DOCTOR_ORDER_PRIORITY_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (DOCTOR_ORDER_PRIORITY_ID)
);

CREATE TABLE DOCTOR_ORDER_KIND (
  	DOCTOR_ORDER_KIND_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (DOCTOR_ORDER_KIND_ID)
);

CREATE TABLE RELIGION (
  RELIGION_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (RELIGION_ID)
);

CREATE TABLE OCCUPATION (
  OCCUPATION_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (OCCUPATION_ID)
);

CREATE TABLE WEEK_DAY (
  WEEK_DAY_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1,
  
  PRIMARY KEY (WEEK_DAY_ID)
);


CREATE TABLE COUNTRY (
       COUNTRY_ID BIGINT NOT NULL AUTO_INCREMENT
     , NAME VARCHAR(100) NOT NULL
     , DOMAIN CHAR(2)
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , PRIMARY KEY (COUNTRY_ID)
); 


CREATE TABLE DEPARTMENT (
  DEPARTMENT_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1,
  
  PRIMARY KEY (DEPARTMENT_ID)
);

CREATE TABLE HOSPITAL_LOCATION (
  	HOSPITAL_LOCATION_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , ADDRESS TEXT
  , CITY VARCHAR(150)
  , COUNTRY_ID BIGINT DEFAULT 215
  , ZIP_CODE  VARCHAR(10) 
  , PHONE VARCHAR(20) NOT NULL
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (HOSPITAL_LOCATION_ID)
);

CREATE TABLE USER_GROUP (
  USER_GROUP_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , PERMISSION TEXT
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1,
  
  PRIMARY KEY (USER_GROUP_ID)
);

--
-- Table structure for table `USERS`
--

CREATE TABLE USERS (
       USER_ID BIGINT NOT NULL AUTO_INCREMENT 
     , USER_GROUP_ID BIGINT NOT NULL 
     , USER_NAME VARCHAR(100)
     , PASSWORD VARCHAR(50) NOT NULL DEFAULT '1234'
     , FIRST_NAME VARCHAR(50) NOT NULL
     , LAST_NAME VARCHAR(50) NOT NULL
     , MIDDLE_NAME VARCHAR(50) 
     , PICTURE VARCHAR(150) DEFAULT 'user.jpg'  
     , EMAIL VARCHAR(100)
     , CURRENT_LOCALE VARCHAR(10)
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
     , MOD_DATE TIMESTAMP NOT NULL  
     , BIRTH_DATE DATE NOT NULL
     , SEX CHAR(1) NOT NULL   
     , MOD_BY BIGINT NOT NULL DEFAULT 1
     , HOME_PHONE VARCHAR(20)
     , MOBILE_PHONE VARCHAR(20)
     , ADDRESS TEXT
     , CITY VARCHAR(150) 
     , COUNTRY_ID BIGINT DEFAULT 215
     , ZIP_CODE  VARCHAR(10) 
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (USER_ID) 
     , CONSTRAINT FK_USER_1 FOREIGN KEY (USER_GROUP_ID)
                  REFERENCES USER_GROUP (USER_GROUP_ID)
); 
ALTER TABLE USERS MODIFY COLUMN STATUS SMALLINT DEFAULT 1
      COMMENT '0-Pending Approval, 1- Approved/Active, 2- Rejected, 3- Inactive/Deactivated';
CREATE UNIQUE INDEX UNIQUE_USER ON USERS (EMAIL ASC);
CREATE UNIQUE INDEX UNIQUE_USER_NAME ON USERS (USER_NAME ASC);
-----------------------------------------------------------

CREATE TABLE EMPLOYEE (
       EMPLOYEE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , USER_ID BIGINT NOT NULL 
     , DESIGNATION VARCHAR(100)
     , DEPARTMENT_ID BIGINT NOT NULL
     , SHORT_BIOGRAPHIE TEXT
     , SPECIALIST VARCHAR(100)
     , BLOOD_GROUP VARCHAR(2)
     , RESUME TEXT
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (EMPLOYEE_ID)
     , CONSTRAINT FK_EMPLOYEE_1 FOREIGN KEY (USER_ID)
                  REFERENCES USERS (USER_ID)
     , CONSTRAINT FK_EMPLOYEE_2 FOREIGN KEY (DEPARTMENT_ID)
                  REFERENCES DEPARTMENT (DEPARTMENT_ID)
);

CREATE TABLE INSURANCE (
	   INSURANCE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , NAME VARCHAR(100) NOT NULL
	 , INSURANCE_NUMBER VARCHAR(100) NOT NULL
	 , INSURANCE_CODE VARCHAR(100) NOT NULL
	 , SERVICE_TAX DOUBLE	
	 , DISCOUNT DOUBLE
	 , REMARK VARCHAR(250) 
	 , HOSPITAL_RATE DOUBLE	
	 , INSURANCE_RATE DOUBLE	
	 , TOTAL DOUBLE	
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (INSURANCE_ID)
);

CREATE TABLE PATIENT (
       PATIENT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , RELIGION_ID TINYINT
     , OCCUPATION_ID BIGINT
     , BLOOD_GROUP VARCHAR(2)
     , NATIONALITY_ID BIGINT
     , MEDICAL_RECORD_NUMBER VARCHAR(20) NOT NULL
     , USER_ID BIGINT NOT NULL 
     , PAYER_TYPE_ID TINYINT
     , MARITAL_STATUS_ID TINYINT
     , EMPLOYER VARCHAR(25)
     , AUTHORIZATION_LETTER_NUMBER VARCHAR(25)
     , EXPIRY_DATE TIMESTAMP
     , EMPLOYEE_ID VARCHAR(25)
     , INSURANCE_ID BIGINT
	 , POLICY_NUMBER VARCHAR(20)
	 , INSURANCE_EXPIRY_DATE TIMESTAMP
	 , REFERRAL VARCHAR(100)
     , REFERRAL_PHONE VARCHAR(20)
     , CONTACT VARCHAR(100)
     , CONTACT_PHONE VARCHAR(20)
     , IS_SELF_RESPONSIBLE VARCHAR(1) NOT NULL DEFAULT 'Y'
     , RP_FIRST_NAME VARCHAR(50)
     , RP_LAST_NAME VARCHAR(50)
     , ACCOUNT_NUMBER VARCHAR(20)
     , MEDICAL_HISTORY TEXT
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (PATIENT_ID)
     , CONSTRAINT FK_PATIENT_1 FOREIGN KEY (USER_ID)
                  REFERENCES USERS (USER_ID)
     , CONSTRAINT FK_PATIENT_2 FOREIGN KEY (RELIGION_ID)
                  REFERENCES RELIGION (RELIGION_ID)
     , CONSTRAINT FK_PATIENT_3 FOREIGN KEY (OCCUPATION_ID)
                  REFERENCES OCCUPATION (OCCUPATION_ID)
     , CONSTRAINT FK_PATIENT_4 FOREIGN KEY (NATIONALITY_ID)
                  REFERENCES COUNTRY (COUNTRY_ID)
     , CONSTRAINT FK_PATIENT_5 FOREIGN KEY (PAYER_TYPE_ID)
                  REFERENCES PAYER_TYPE (PAYER_TYPE_ID)
     , CONSTRAINT FK_PATIENT_6 FOREIGN KEY (INSURANCE_ID)
                  REFERENCES INSURANCE (INSURANCE_ID)
     , CONSTRAINT FK_PATIENT_7 FOREIGN KEY (MARITAL_STATUS_ID)
                  REFERENCES MARITAL_STATUS (MARITAL_STATUS_ID)
);

CREATE TABLE DOCUMENT (
	   DOCUMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL 
     , DOCTOR_ID BIGINT 
     , FILE_LOCATION VARCHAR(250)
     , DESCRIPTION TEXT
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (DOCUMENT_ID)
     , CONSTRAINT FK_DOCUMENT_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
     , CONSTRAINT FK_DOCUMENT_2 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE SCHEDULE (
	   SCHEDULE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , DOCTOR_ID BIGINT NOT NULL
     , WEEK_DAY_ID TINYINT NOT NULL
     , HOSPITAL_LOCATION_ID TINYINT NOT NULL
     , BEGIN_TIME VARCHAR(5) NOT NULL
     , END_TIME VARCHAR(5) NOT NULL
     , PER_PATIENT_TIME VARCHAR(5) NOT NULL
     , BEGIN_TIME_BREAK1 VARCHAR(5)
     , END_TIME_BREAK1 VARCHAR(5)
     , BEGIN_TIME_BREAK2 VARCHAR(5)
     , END_TIME_BREAK2 VARCHAR(5)
     , BEGIN_TIME_LUNCH VARCHAR(5)
     , END_TIME_LUNCH VARCHAR(5)
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (SCHEDULE_ID)
     , CONSTRAINT FK_SCHEDULE_1 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
     , CONSTRAINT FK_SCHEDULE_2 FOREIGN KEY (WEEK_DAY_ID)
                  REFERENCES WEEK_DAY (WEEK_DAY_ID)
     , CONSTRAINT FK_SCHEDULE_3 FOREIGN KEY (HOSPITAL_LOCATION_ID)
                  REFERENCES HOSPITAL_LOCATION (HOSPITAL_LOCATION_ID)
);

CREATE TABLE APPOINTMENT (
	   APPOINTMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL 
     , DOCTOR_ID BIGINT NOT NULL
     , DEPARTMENT_ID BIGINT NOT NULL
     , HOSPITAL_LOCATION_ID TINYINT NOT NULL 
     , APPOINTMENT_DATE VARCHAR(250) NOT NULL
     , BEGIN_TIME VARCHAR(8) NOT NULL
     , END_TIME VARCHAR(8) NOT NULL
     , PROBLEM TEXT
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0      -- 0 for Canceled, 1 for Saved, 2 for Comfirmed, 3 for Honored
     , PRIMARY KEY (APPOINTMENT_ID)
     , CONSTRAINT FK_APPOINTMENT_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
     , CONSTRAINT FK_APPOINTMENT_2 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
     , CONSTRAINT FK_APPOINTMENT_3 FOREIGN KEY (DEPARTMENT_ID)
                  REFERENCES DEPARTMENT (DEPARTMENT_ID)
     , CONSTRAINT FK_APPOINTMENT_4 FOREIGN KEY (HOSPITAL_LOCATION_ID)
                  REFERENCES HOSPITAL_LOCATION (HOSPITAL_LOCATION_ID)
);

CREATE TABLE CASE_STUDY (
	   CASE_STUDY_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL 
     , FOOD_ALLERGIES VARCHAR(250) 
     , TENDENCY_BLEED VARCHAR(250) 
     , HEART_DISEASES VARCHAR(250) 
     , HIGH_BLOOD_PRESSURE VARCHAR(250) 
     , DIABETIC VARCHAR(250) 
     , SURGERY VARCHAR(250) 
     , ACCIDENT VARCHAR(250) 
     , OTHERS VARCHAR(250) 
     , FAMILY_MEDICAL_HISTORY VARCHAR(250) 
     , CURRENT_MEDICATION VARCHAR(250) 
     , FEMALE_PREGNANCY VARCHAR(250) 
     , BREAST_FEEDING VARCHAR(250) 
     , HEALTH_INSURANCE VARCHAR(250) 
     , LOW_INCOME VARCHAR(250) 
     , REFERENCE VARCHAR(250) 
     , STATUS SMALLINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (CASE_STUDY_ID)
     , CONSTRAINT FK_CASE_STUDY_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
);


CREATE TABLE CATEGORY (
  CATEGORY_ID BIGINT NOT NULL AUTO_INCREMENT
  , PARENT_CATEGORY_ID BIGINT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE MANUFACTURER (
  MANUFACTURER_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (MANUFACTURER_ID)
);

CREATE TABLE SUPPLIER (
  	SUPPLIER_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , CONTACT_NAME VARCHAR(250)
  , HOME_PHONE VARCHAR(20)
  , MOBILE_PHONE VARCHAR(20)
  , EMAIL VARCHAR(50)
  , FAX VARCHAR(20)
  , ADDRESS TEXT
  , CITY VARCHAR(150) 
  , COUNTRY_ID BIGINT DEFAULT 215
  , ZIP_CODE  VARCHAR(10) 
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (SUPPLIER_ID)
);

CREATE TABLE BRAND (
  	BRAND_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (BRAND_ID)
);

CREATE TABLE PRODUCT (
  PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
  , CATEGORY_ID BIGINT NOT NULL
  , MANUFACTURER_ID BIGINT NOT NULL
  , BRAND_ID BIGINT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , PRICE DOUBLE NOT NULL
  , MINIMUM_QTY BIGINT NOT NULL DEFAULT 0
  , AVAILABLE_QTY BIGINT NOT NULL DEFAULT 0
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (PRODUCT_ID)
  , CONSTRAINT FK_PRODUCT_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (CATEGORY_ID)
  , CONSTRAINT FK_PRODUCT_2 FOREIGN KEY (MANUFACTURER_ID)
                  REFERENCES MANUFACTURER (MANUFACTURER_ID)
);

CREATE TABLE SYMPTOM (
  SYMPTOM_ID BIGINT NOT NULL AUTO_INCREMENT
  , CATEGORY_ID BIGINT NOT NULL
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (SYMPTOM_ID)
  , CONSTRAINT FK_SYMPTOM_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE TABLE ALLERGY (
  ALLERGY_ID BIGINT NOT NULL AUTO_INCREMENT
  , CATEGORY_ID BIGINT NOT NULL
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (ALLERGY_ID)
  , CONSTRAINT FK_ALLERGY_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (CATEGORY_ID)
);

CREATE TABLE VACCINE (
  VACCINE_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (VACCINE_ID)
);

CREATE TABLE MEDICALHISTORY (
  MEDICALHISTORY_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (MEDICALHISTORY_ID)
);

CREATE TABLE SOCIALHISTORY (
  SOCIALHISTORY_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION TEXT
  , STATUS SMALLINT DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , PRIMARY KEY (SOCIALHISTORY_ID)
);

CREATE TABLE VISIT (
	   VISIT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL  
     , PACKAGE_ID BIGINT NOT NULL
     , DOCTOR_ID BIGINT NOT NULL,
     , VISIT_DATETIME TIMESTAMP NOT NULL
     , CHIEF_OF_COMPLAIN TEXT NOT NULL
     , IS_HEALTH_CHECKUP SMALLINT NOT NULL DEFAULT 0
	 , STATUS SMALLINT DEFAULT 0				-- 0 for Canceled, 1 for Saved, 2 for Comfirmed, 3 for Honored
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (VISIT_ID)
     , CONSTRAINT FK_VISIT_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
     , CONSTRAINT FK_VISIT_2 FOREIGN KEY (PACKAGE_ID)
                  REFERENCES PACKAGE (PACKAGE_ID)
     , CONSTRAINT FK_VISIT_3 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
                  
);

CREATE UNIQUE INDEX UNIQUE_VISIT_NUMBER ON VISIT (VISIT_NUMBER);

CREATE TABLE VISIT_SYMPTOM (
	   VISIT_SYMPTOM_ID BIGINT NOT NULL AUTO_INCREMENT 
     , VISIT_ID BIGINT NOT NULL
     , SYMPTOM_ID BIGINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (VISIT_SYMPTOM_ID)
     , CONSTRAINT FK_VISIT_SYMPTOM_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VISIT_SYMPTOM_2 FOREIGN KEY (SYMPTOM_ID)
                  REFERENCES SYMPTOM (SYMPTOM_ID)
);

CREATE UNIQUE INDEX UNIQUE_VISIT_SYMPTOM ON VISIT_SYMPTOM (VISIT_ID,  SYMPTOM_ID);

CREATE TABLE VISIT_ALLERGY (
	   VISIT_ALLERGY_ID BIGINT NOT NULL AUTO_INCREMENT 
     , VISIT_ID BIGINT NOT NULL
     , ALLERGY_ID BIGINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (VISIT_ALLERGY_ID)
     , CONSTRAINT FK_VISIT_ALLERGY_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VISIT_ALLERGY_2 FOREIGN KEY (ALLERGY_ID)
                  REFERENCES ALLERGY (ALLERGY_ID)
);

CREATE UNIQUE INDEX UNIQUE_VISIT_ALLERGY ON VISIT_ALLERGY (VISIT_ID,  ALLERGY_ID);

CREATE TABLE VISIT_VACCINE (
	   VISIT_VACCINE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , VISIT_ID BIGINT NOT NULL
     , VACCINE_ID BIGINT NOT NULL
     , GIVEN_DATE DATE NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (VISIT_VACCINE_ID)
     , CONSTRAINT FK_VISIT_VACCINE_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VISIT_VACCINE_2 FOREIGN KEY (VACCINE_ID)
                  REFERENCES VACCINE (VACCINE_ID)
);

CREATE UNIQUE INDEX UNIQUE_VISIT_VACCINE ON VISIT_VACCINE (VISIT_ID,  VACCINE_ID);

CREATE TABLE VISIT_MEDICALHISTORY (
	   VISIT_MEDICALHISTORY_ID BIGINT NOT NULL AUTO_INCREMENT 
     , VISIT_ID BIGINT NOT NULL
     , MEDICALHISTORY_ID BIGINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (VISIT_MEDICALHISTORY_ID)
     , CONSTRAINT FK_VISIT_MEDICALHISTORY_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VISIT_MEDICALHISTORY_2 FOREIGN KEY (MEDICALHISTORY_ID)
                  REFERENCES MEDICALHISTORY (MEDICALHISTORY_ID)
);

CREATE UNIQUE INDEX UNIQUE_VISIT_MEDICALHIST ON VISIT_MEDICALHISTORY (VISIT_ID,  MEDICALHISTORY_ID);

CREATE TABLE VISIT_SOCIALHISTORY (
	   VISIT_SOCIALHISTORY_ID BIGINT NOT NULL AUTO_INCREMENT 
     , VISIT_ID BIGINT NOT NULL
     , SOCIALHISTORY_ID BIGINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (VISIT_SOCIALHISTORY_ID)
     , CONSTRAINT FK_VISIT_SOCIALHISTORY_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VISIT_SOCIALHISTORY_2 FOREIGN KEY (SOCIALHISTORY_ID)
                  REFERENCES SOCIALHISTORY (SOCIALHISTORY_ID)
);

CREATE UNIQUE INDEX UNIQUE_VISIT_SOCIALHIST ON VISIT_SOCIALHISTORY (VISIT_ID,  SOCIALHISTORY_ID);


CREATE TABLE PACKAGE (
	   PACKAGE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , NAME VARCHAR(100) NOT NULL
	 , DESCRIPTION VARCHAR(250) 
	 , DISCOUNT DOUBLE	
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (PACKAGE_ID)
);

CREATE TABLE ADMISSION (
	   ADMISSION_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL 
     , PACKAGE_ID BIGINT 
     , ADMISSION_DATETIME TIMESTAMP NOT NULL
     , ADMISSION_REASON VARCHAR(1000)
     , DISCHARGE_DATE DATE
     , CONTACT_NAME VARCHAR(100)
     , CONTACT_RELATION VARCHAR(100)
     , CONTACT_PHONE VARCHAR(20)
     , CONTACT_ADDRESS VARCHAR(100)
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (ADMISSION_ID)
     , CONSTRAINT FK_ADMISSION_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
     , CONSTRAINT FK_ADMISSION_2 FOREIGN KEY (PACKAGE_ID)
                  REFERENCES PACKAGE (PACKAGE_ID)
);


CREATE TABLE PRESCRIPTION (
	   PRESCRIPTION_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , VISIT_ID BIGINT
     , ADMISSION_ID BIGINT  
     , PRESCRIPTION_DATETIME DATE NOT NULL
	 , PRESCRIPTION_TYPE SMALLINT DEFAULT 0
	 , NOTES VARCHAR(500)
	 , IS_DISCHARGE VARCHAR(1) NOT NULL DEFAULT 'Y'
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (PRESCRIPTION_ID)
     , CONSTRAINT FK_PRESCRIPTION_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_PRESCRIPTION_2 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
);

CREATE TABLE PRESCRIPTION_MEDICINE (
	   PRESCRIPTION_MEDICINE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , PRESCRIPTION_ID BIGINT NOT NULL 
	 , MEDICINE_ID BIGINT NOT NULL 
	 , DOSAGE VARCHAR(25) NOT NULL
	 , QUANTITY SMALLINT NOT NULL
	 , FREQUENCY VARCHAR(200) NOT NULL
	 , NUMBER_OF_DAYS SMALLINT
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   , PRIMARY KEY (PRESCRIPTION_MEDICINE_ID)
   , CONSTRAINT FK_PRESCRIPTION_MEDICINE_1 FOREIGN KEY (PRESCRIPTION_ID)
                  REFERENCES PRESCRIPTION (PRESCRIPTION_ID)
   , CONSTRAINT FK_PRESCRIPTION_MEDICINE_2 FOREIGN KEY (MEDICINE_ID)
                  REFERENCES PRODUCT (PRODUCT_ID)
);

CREATE TABLE DIAGNOSIS (
	   DIAGNOSIS_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , NAME VARCHAR(100) NOT NULL
	 , DESCRIPTION VARCHAR(250)
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   , PRIMARY KEY (DIAGNOSIS_ID)
);

CREATE TABLE ADMISSION_DIAGNOSIS (
	   ADMISSION_DIAGNOSIS_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , ADMISSION_ID BIGINT NOT NULL 
	 , DIAGNOSIS_ID BIGINT NOT NULL 
	 , INSTRUCTIONS VARCHAR(250)
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   , PRIMARY KEY (ADMISSION_DIAGNOSIS_ID)
   , CONSTRAINT FK_ADMISSION_DIAGNOSIS_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
   , CONSTRAINT FK_ADMISSION_DIAGNOSIS_2 FOREIGN KEY (DIAGNOSIS_ID)
                  REFERENCES DIAGNOSIS (DIAGNOSIS_ID)
);

CREATE TABLE VISIT_DIAGNOSIS (
	   VISIT_DIAGNOSIS_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , VISIT_ID BIGINT NOT NULL 
	 , DIAGNOSIS_ID BIGINT NOT NULL 
	 , INSTRUCTIONS VARCHAR(250)
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   , PRIMARY KEY (VISIT_DIAGNOSIS_ID)
   , CONSTRAINT FK_VISIT_DIAGNOSIS_1 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
   , CONSTRAINT FK_VISIT_DIAGNOSIS_2 FOREIGN KEY (DIAGNOSIS_ID)
                  REFERENCES DIAGNOSIS (DIAGNOSIS_ID)
);

CREATE TABLE PRESCRIPTION_DIAGNOSIS (
	   PRESCRIPTION_DIAGNOSIS_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , PRESCRIPTION_ID BIGINT NOT NULL 
	 , DIAGNOSIS VARCHAR(100) NOT NULL
	 , INSTRUCTIONS VARCHAR(250) NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   , PRIMARY KEY (PRESCRIPTION_DIAGNOSIS_ID)
   , CONSTRAINT FK_PRESCRIPTION_DIAGNOSIS_1 FOREIGN KEY (PRESCRIPTION_ID)
                  REFERENCES PRESCRIPTION (PRESCRIPTION_ID)
);


CREATE TABLE ACCOUNT (
	   ACCOUNT_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , ACCOUNT_TYPE TINYINT NOT NULL -- 0 For Debit 1 For Credit
	 , NAME VARCHAR(100) NOT NULL 
	 , DESCRIPTION VARCHAR(250)
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   	 , PRIMARY KEY (ACCOUNT_ID)
);


CREATE TABLE INVOICE (
	   INVOICE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , PATIENT_ID BIGINT NOT NULL
     , SUB_TOTAL DOUBLE NOT NULL DEFAULT 0
     , VAT DOUBLE NOT NULL DEFAULT 0
     , DISCOUNT DOUBLE NOT NULL DEFAULT 0
     , GRAND_TOTAL DOUBLE NOT NULL DEFAULT 0
     , PAID DOUBLE NOT NULL DEFAULT 0
     , DUE DOUBLE NOT NULL DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (INVOICE_ID)
     , CONSTRAINT FK_INVOICE_1 FOREIGN KEY (PATIENT_ID)
                  REFERENCES PATIENT (PATIENT_ID)
);

CREATE TABLE INVOICE_ACCOUNT (
	   INVOICE_ACCOUNT_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , INVOICE_ID BIGINT NOT NULL 
	 , ACCOUNT_ID BIGINT NOT NULL 
	 , DESCRIPTION VARCHAR(250)
	 , QUANTITY SMALLINT NOT NULL
     , UNIT_PRICE DOUBLE NOT NULL
     , TOTAL DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (INVOICE_ACCOUNT_ID)
     , CONSTRAINT FK_INVOICE_ACCOUNT_1 FOREIGN KEY (INVOICE_ID)
                  REFERENCES INVOICE (INVOICE_ID)
     , CONSTRAINT FK_INVOICE_ACCOUNT_2 FOREIGN KEY (ACCOUNT_ID)
                  REFERENCES ACCOUNT (ACCOUNT_ID)
);

CREATE TABLE PAYMENT (
	   PAYMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , ACCOUNT_ID BIGINT NOT NULL 
	 , PAY_TO VARCHAR(100) NOT NULL
	 , DESCRIPTION VARCHAR(250) 
     , AMOUNT DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (PAYMENT_ID)
     , CONSTRAINT FK_PAYMENT_1 FOREIGN KEY (ACCOUNT_ID)
                  REFERENCES ACCOUNT (ACCOUNT_ID)
);

CREATE TABLE SERVICE (
	   SERVICE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , DOCTOR_ORDER_TYPE_ID TINYINT NOT NULL 
	 , NAME VARCHAR(100) NOT NULL
	 , DESCRIPTION VARCHAR(250) 
	 , QUANTITY SMALLINT NOT NULL	
	 , RATE DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (SERVICE_ID)
     , INDEX (DOCTOR_ORDER_TYPE_ID)
     , CONSTRAINT FK_SERVICE_1 FOREIGN KEY (DOCTOR_ORDER_TYPE_ID)
                  REFERENCES DOCTOR_ORDER_TYPE (DOCTOR_ORDER_TYPE_ID)
);


CREATE TABLE PACKAGE_SERVICE (
	   PACKAGE_SERVICE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , PACKAGE_ID BIGINT NOT NULL 
	 , SERVICE_ID BIGINT NOT NULL 
	 , QUANTITY SMALLINT NOT NULL	
	 , RATE DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (PACKAGE_SERVICE_ID)
     , CONSTRAINT FK_PACKAGE_SERVICE_1 FOREIGN KEY (PACKAGE_ID)
                  REFERENCES PACKAGE (PACKAGE_ID)
     , CONSTRAINT FK_PACKAGE_SERVICE_2 FOREIGN KEY (SERVICE_ID)
                  REFERENCES SERVICE (SERVICE_ID)
);


CREATE TABLE BILL (
	   BILL_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , VISIT_ID BIGINT
     , ADMISSION_ID BIGINT
     , APPOINTMENT_ID BIGINT
     , BILL_DATE DATE NOT NULL
     , DUE_DATE DATE NOT NULL
     , NOTES VARCHAR(1000)
     , SUB_TOTAL DOUBLE NOT NULL DEFAULT 0
     , TAXES DOUBLE NOT NULL DEFAULT 0
     , DISCOUNT DOUBLE NOT NULL DEFAULT 0
     , GRAND_TOTAL DOUBLE NOT NULL DEFAULT 0
     , PAID DOUBLE NOT NULL DEFAULT 0
     , DUE DOUBLE NOT NULL DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
     , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
     , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (BILL_ID)
     , CONSTRAINT FK_BILL_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
     , CONSTRAINT FK_BILL_2 FOREIGN KEY (APPOINTMENT_ID)
                  REFERENCES APPOINTMENT (APPOINTMENT_ID)
);

CREATE TABLE BILL_SERVICE (
	   BILL_SERVICE_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , BILL_ID BIGINT NOT NULL 
	 , SERVICE_ID BIGINT NOT NULL 
	 , DOCTOR_ID BIGINT NOT NULL
	 , SERVICE_DATE DATE NOT NULL
	 , DESCRIPTION VARCHAR(250)
	 , QUANTITY SMALLINT NOT NULL
     , UNIT_AMOUNT DOUBLE NOT NULL
     , TOTAL_AMOUNT DOUBLE NOT NULL
     , DISCOUNT_PERCENTAGE DOUBLE
     , DISCOUNT_AMOUNT DOUBLE
     , NET_AMOUNT DOUBLE NOT NULL
     , PAYER_AMOUNT DOUBLE NOT NULL
     , PATIENT_AMOUNT DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (BILL_SERVICE_ID)
     , CONSTRAINT FK_BILL_SERVICE_1 FOREIGN KEY (BILL_ID)
                  REFERENCES BILL (BILL_ID)
     , CONSTRAINT FK_BILL_SERVICE_2 FOREIGN KEY (SERVICE_ID)
                  REFERENCES SERVICE (SERVICE_ID)
     , CONSTRAINT FK_BILL_SERVICE_3 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);


CREATE TABLE BILL_PAYMENT (
	   BILL_PAYMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , BILL_ID BIGINT NOT NULL 
	 , PAYMENT_DATE DATE NOT NULL
	 , DESCRIPTION VARCHAR(250) 
     , AMOUNT DOUBLE NOT NULL
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (BILL_PAYMENT_ID)
     , CONSTRAINT FK_BILL_PAYMENT_1 FOREIGN KEY (BILL_ID)
                  REFERENCES BILL (BILL_ID)
);

CREATE TABLE VITAL_SIGN (
	   VITAL_SIGN_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , VISIT_ID BIGINT 
	 , ADMISSION_ID BIGINT 
	 , VITAL_SIGN_DATETIME TIMESTAMP NOT NULL DEFAULT NOW()
	 , TEMPERATURE DOUBLE 
	 , PULSE VARCHAR(25)
	 , RESPIRATION VARCHAR(25)
	 , BLOOD_PRESSURE VARCHAR(25)
	 , BLOOD_SUGAR SMALLINT 
	 , PAIN VARCHAR(250)
	 , WEIGHT DOUBLE 
	 , HEIGHT DOUBLE 
	 , BMI DOUBLE 
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (VITAL_SIGN_ID)
     , CONSTRAINT FK_VITAL_SIGN_1 FOREIGN KEY (VISIT_ID)
               REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_VITAL_SIGN_2 FOREIGN KEY (ADMISSION_ID)
               REFERENCES ADMISSION (ADMISSION_ID)
);

CREATE TABLE DOCTOR_ORDER (
	   DOCTOR_ORDER_ID BIGINT NOT NULL AUTO_INCREMENT 
	 , VISIT_ID BIGINT 
	 , ADMISSION_ID BIGINT 
	 , DOCTOR_ORDER_TYPE_ID TINYINT NOT NULL 
	 , DOCTOR_ORDER_STATUS_ID TINYINT NOT NULL 
	 , DOCTOR_ORDER_PRIORITY_ID TINYINT NOT NULL 
	 , DOCTOR_ORDER_DATETIME TIMESTAMP NOT NULL DEFAULT NOW()
	 , DESCRIPTION VARCHAR(1000) 
	 , DOCTOR_ID BIGINT 
	 , DOCTOR_ORDER_KIND_ID TINYINT
	 , RECEIVED_DATETIME TIMESTAMP
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
   	 , PRIMARY KEY (DOCTOR_ORDER_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_1 FOREIGN KEY (VISIT_ID)
               REFERENCES VISIT (VISIT_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_2 FOREIGN KEY (ADMISSION_ID)
               REFERENCES ADMISSION (ADMISSION_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_3 FOREIGN KEY (DOCTOR_ORDER_TYPE_ID)
               REFERENCES DOCTOR_ORDER_TYPE (DOCTOR_ORDER_TYPE_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_4 FOREIGN KEY (DOCTOR_ORDER_PRIORITY_ID)
               REFERENCES DOCTOR_ORDER_PRIORITY (DOCTOR_ORDER_PRIORITY_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_5 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
     , CONSTRAINT FK_DOCTOR_ORDER_6 FOREIGN KEY (DOCTOR_ORDER_KIND_ID)
               REFERENCES DOCTOR_ORDER_KIND (DOCTOR_ORDER_KIND_ID)
);

CREATE TABLE BUILDING (
       BUILDING_ID SMALLINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(250)
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (BUILDING_ID)
);

CREATE TABLE FLOOR (
       FLOOR_ID SMALLINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(250)
     , BUILDING_ID SMALLINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (FLOOR_ID)
     , INDEX (BUILDING_ID)
     , CONSTRAINT FK_FLOOR_1 FOREIGN KEY (BUILDING_ID)
                  REFERENCES BUILDING (BUILDING_ID)
);

CREATE TABLE ROOM (
       ROOM_ID SMALLINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(250)
     , FLOOR_ID SMALLINT NOT NULL
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (ROOM_ID)
     , INDEX (FLOOR_ID)
     , CONSTRAINT FK_ROOM_1 FOREIGN KEY (FLOOR_ID)
                  REFERENCES FLOOR (FLOOR_ID)
);

CREATE TABLE WARD (
       WARD_ID SMALLINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(250)
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (WARD_ID)
);

CREATE TABLE BED (
       BED_ID SMALLINT NOT NULL AUTO_INCREMENT 
     , BED_NUMBER VARCHAR(25) NOT NULL
     , CATEGORY_ID BIGINT NOT NULL
     , ROOM_ID SMALLINT NOT NULL
     , DESCRIPTION VARCHAR(250)
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (BED_ID)
     , INDEX (CATEGORY_ID)
     , CONSTRAINT FK_BED_1 FOREIGN KEY (CATEGORY_ID)
                  REFERENCES CATEGORY (CATEGORY_ID)
     , INDEX (ROOM_ID)
     , CONSTRAINT FK_BED_2 FOREIGN KEY (ROOM_ID)
                  REFERENCES ROOM (ROOM_ID)
);

CREATE TABLE BED_ASSIGNMENT (
	   BED_ASSIGNMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , ADMISSION_ID BIGINT NOT NULL
     , BED_ID SMALLINT NOT NULL
     , START_DATE DATE NOT NULL
     , END_DATE DATE
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (BED_ASSIGNMENT_ID)
     , CONSTRAINT FK_BED_ASSIGNMENT_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
     , CONSTRAINT FK_BED_ASSIGNMENT_2 FOREIGN KEY (BED_ID)
                  REFERENCES BED (BED_ID)
);

CREATE TABLE DOCTOR_ASSIGNMENT (
	   DOCTOR_ASSIGNMENT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , ADMISSION_ID BIGINT NOT NULL
     , DOCTOR_ID BIGINT NOT NULL
     , START_DATE DATE NOT NULL
     , END_DATE DATE
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (DOCTOR_ASSIGNMENT_ID)
     , CONSTRAINT FK_DOCTOR_ASSIGNMENT_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
     , CONSTRAINT FK_DOCTOR_ASSIGNMENT_2 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE DISCHARGE_REASON (
  	DISCHARGE_REASON_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (DISCHARGE_REASON_ID)
);

CREATE TABLE DISCHARGE (
	   DISCHARGE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , ADMISSION_ID BIGINT
     , VISIT_ID BIGINT
     , DOCTOR_ID BIGINT NOT NULL
     , DISCHARGE_REASON_ID TINYINT NOT NULL
     , DISCHARGE_DATETIME TIMESTAMP NOT NULL
     , ADMITTANCE_REASON TEXT NOT NULL
     , TREATMENT_SUMMARY TEXT NOT NULL
     , PHYSICIAN_APPROVED VARCHAR(1) NOT NULL DEFAULT 'Y'
     , FURTHER_TREATMENT_PLAN TEXT 
     , NEXT_CHECKUP_DATE DATE 
     , CLIENT_CONSENT_APPROVAL VARCHAR(1) NOT NULL DEFAULT 'Y'
     , NOTES TEXT 
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , PRIMARY KEY (DISCHARGE_ID)
     , CONSTRAINT FK_DISCHARGE_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
     , CONSTRAINT FK_DISCHARGE_2 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)             
     , CONSTRAINT FK_DISCHARGE_3 FOREIGN KEY (DOCTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
     , CONSTRAINT FK_DISCHARGE_4 FOREIGN KEY (DISCHARGE_REASON_ID)
                  REFERENCES DISCHARGE_REASON (DISCHARGE_REASON_ID)
);


---  INVESTIGATION 

CREATE TABLE LAB_TEST_METHOD (
  	LAB_TEST_METHOD_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (LAB_TEST_METHOD_ID)
);

CREATE TABLE LAB_TEST_UNIT (
  	LAB_TEST_UNIT_ID SMALLINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (LAB_TEST_UNIT_ID)
);

CREATE TABLE LAB_TEST (
  	LAB_TEST_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , LAB_TEST_METHOD_ID TINYINT
  , PARENT_ID BIGINT
  , LAB_TEST_UNIT_ID SMALLINT
  , NORMAL_RANGE_MINIMUM DOUBLE 
  , NORMAL_RANGE_MAXIMUM DOUBLE
  , CRITICAL_LOW DOUBLE
  , CRITICAL_HIGH DOUBLE
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (LAB_TEST_ID)
  , CONSTRAINT FK_LAB_TEST_1 FOREIGN KEY (LAB_TEST_METHOD_ID)
                  REFERENCES LAB_TEST_METHOD (LAB_TEST_METHOD_ID)
  , CONSTRAINT FK_LAB_TEST_2 FOREIGN KEY (PARENT_ID)
                  REFERENCES LAB_TEST (LAB_TEST_ID)
  , CONSTRAINT FK_LAB_TEST_3 FOREIGN KEY (LAB_TEST_UNIT_ID)
                  REFERENCES LAB_TEST_UNIT (LAB_TEST_UNIT_ID)
);


CREATE TABLE INVESTIGATION (
  	INVESTIGATION_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , DESCRIPTION VARCHAR(250)
  , INVESTIGATION_DATETIME DATE NOT NULL
  , ADMISSION_ID BIGINT
  , VISIT_ID BIGINT
  , DOCTOR_ORDER_ID BIGINT
  , LAB_TEST_ID BIGINT NOT NULL
  , COLLECTION_DATETIME TIMESTAMP NULL
  , COLLECTION_COMMENTS VARCHAR(1000) 
  , REJECTION_DATETIME TIMESTAMP NULL
  , REJECTION_COMMENTS VARCHAR(1000) 
  , FINALIZATION_DATETIME TIMESTAMP NULL
  , FINALIZATION_COMMENTS VARCHAR(1000)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (INVESTIGATION_ID)
  , CONSTRAINT FK_INVESTIGATION_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
  , CONSTRAINT FK_INVESTIGATION_2 FOREIGN KEY (VISIT_ID)
                  REFERENCES VISIT (VISIT_ID)
  , CONSTRAINT FK_INVESTIGATION_3 FOREIGN KEY (LAB_TEST_ID)
                  REFERENCES LAB_TEST (LAB_TEST_ID)
  );
  
CREATE TABLE INVESTIGATION_TEST (
  	INVESTIGATION_TEST_ID BIGINT NOT NULL AUTO_INCREMENT
  , INVESTIGATION_ID BIGINT NOT NULL
  , LAB_TEST_ID BIGINT NOT NULL
  , RESULT VARCHAR(10)
  , INTERPRETATION VARCHAR(250)
  , IMPRESSION VARCHAR(250)
  , RESULT_DATETIME TIMESTAMP NULL
  , RESULT_COMMENTS VARCHAR(1000) 
  , DISPATCH_DATETIME TIMESTAMP NULL
  , DISPATCH_COMMENTS VARCHAR(1000) 
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (INVESTIGATION_TEST_ID)
  , CONSTRAINT FK_INVESTIGATION_TEST_1 FOREIGN KEY (INVESTIGATION_ID)
                  REFERENCES INVESTIGATION (INVESTIGATION_ID)
  , CONSTRAINT FK_INVESTIGATION_TEST_2 FOREIGN KEY (LAB_TEST_ID)
                  REFERENCES LAB_TEST (LAB_TEST_ID)
);

CREATE TABLE PURCHASE_ORDER (
  	PURCHASE_ORDER_ID BIGINT NOT NULL AUTO_INCREMENT
  , SUPPLIER_ID TINYINT NOT NULL
  , REQUESTOR_ID BIGINT
  , SHIP_TO BIGINT 
  , PURCHASE_ORDER_DATE DATE NOT NULL
  , COMMENTS VARCHAR(1000) 
  , SUB_TOTAL DOUBLE NOT NULL DEFAULT 0
  , TAXES DOUBLE NOT NULL DEFAULT 0
  , DISCOUNT DOUBLE NOT NULL DEFAULT 0
  , GRAND_TOTAL DOUBLE NOT NULL DEFAULT 0
  , DUE DOUBLE NOT NULL DEFAULT 0
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (PURCHASE_ORDER_ID)
  , CONSTRAINT FK_PURCHASE_ORDER_1 FOREIGN KEY (REQUESTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
  , CONSTRAINT FK_PURCHASE_ORDER_2 FOREIGN KEY (SUPPLIER_ID)
                  REFERENCES SUPPLIER (SUPPLIER_ID)
  , CONSTRAINT FK_PURCHASE_ORDER_3 FOREIGN KEY (SHIP_TO)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE PURCHASE_ORDER_PRODUCT (
  	PURCHASE_ORDER_PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
  , PURCHASE_ORDER_ID BIGINT NOT NULL
  , PRODUCT_ID BIGINT NOT NULL
  , QUANTITY SMALLINT NOT NULL
  , UNIT_PRICE DOUBLE 
  , TOTAL_AMOUNT DOUBLE NOT NULL
  , DISCOUNT_PERCENTAGE DOUBLE
  , DISCOUNT_AMOUNT DOUBLE
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (PURCHASE_ORDER_PRODUCT_ID)
  , CONSTRAINT FK_PURCHASE_ORDER_PRODUCT_1 FOREIGN KEY (PURCHASE_ORDER_ID)
                  REFERENCES PURCHASE_ORDER (PURCHASE_ORDER_ID)
  , CONSTRAINT FK_PURCHASE_ORDER_PRODUCT_2 FOREIGN KEY (PRODUCT_ID)
                  REFERENCES PRODUCT (PRODUCT_ID)
);


CREATE TABLE RECEIVE_ORDER (
  	RECEIVE_ORDER_ID BIGINT NOT NULL AUTO_INCREMENT
  , PURCHASE_ORDER_ID BIGINT NOT NULL
  , DELIVERY_NOTE VARCHAR(1000) NOT NULL
  , DELIVERY_DATE DATE NOT NULL
  , PACKAGING_SLIP VARCHAR(10) 
  , AP_REFERENCE VARCHAR(100)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (RECEIVE_ORDER_ID)
  , CONSTRAINT FK_RECEIVE_1 FOREIGN KEY (PURCHASE_ORDER_ID)
                  REFERENCES PURCHASE_ORDER (PURCHASE_ORDER_ID)
);

CREATE TABLE RECEIVE_ORDER_PRODUCT (
  	RECEIVE_ORDER_PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
  , RECEIVE_ORDER_ID BIGINT NOT NULL
  , PRODUCT_ID BIGINT NOT NULL
  , QUANTITY SMALLINT NOT NULL
  , NOTES VARCHAR(100)
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (RECEIVE_ORDER_PRODUCT_ID)
  , CONSTRAINT FK_RECEIVE_ORDER_PRODUCT_1 FOREIGN KEY (RECEIVE_ORDER_ID)
                  REFERENCES RECEIVE_ORDER (RECEIVE_ORDER_ID)
  , CONSTRAINT FK_RECEIVE_ORDER_PRODUCT_2 FOREIGN KEY (PRODUCT_ID)
                  REFERENCES PRODUCT (PRODUCT_ID)
);

	CREATE TABLE PATIENT_SALE (
	  	PATIENT_SALE_ID BIGINT NOT NULL AUTO_INCREMENT
	  , SALE_DATETIME TIMESTAMP NOT NULL
	  , ADMISSION_ID BIGINT
	  , VISIT_ID BIGINT
	  , DOCTOR_ORDER_ID BIGINT
	  , NOTES VARCHAR(1000)
	  , SUB_TOTAL DOUBLE NOT NULL DEFAULT 0
	  , TAXES DOUBLE NOT NULL DEFAULT 0
	  , DISCOUNT DOUBLE NOT NULL DEFAULT 0
	  , GRAND_TOTAL DOUBLE NOT NULL DEFAULT 0
	  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_BY BIGINT NOT NULL DEFAULT 1
	  , STATUS SMALLINT DEFAULT 0
	  , PRIMARY KEY (PATIENT_SALE_ID)
	  , CONSTRAINT FK_PRODUCT_SALE_1 FOREIGN KEY (ADMISSION_ID)
	                  REFERENCES ADMISSION (ADMISSION_ID)
	  , CONSTRAINT FK_PRODUCT_SALE_2 FOREIGN KEY (VISIT_ID)
	                  REFERENCES VISIT (VISIT_ID)
	  , CONSTRAINT FK_PRODUCT_SALE_3 FOREIGN KEY (DOCTOR_ORDER_ID)
	                  REFERENCES DOCTOR_ORDER (DOCTOR_ORDER_ID)
	  );
	  
	CREATE TABLE PATIENT_SALE_PRODUCT (
	  	PATIENT_SALE_PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
	  , PATIENT_SALE_ID BIGINT NOT NULL
	  , PRODUCT_ID BIGINT NOT NULL
	  , QUANTITY SMALLINT NOT NULL
	  , UNIT_PRICE DOUBLE NOT NULL
	  , DISCOUNT_PERCENTAGE DOUBLE
	  , DISCOUNT_AMOUNT DOUBLE
	  , TOTAL_AMOUNT DOUBLE NOT NULL
	  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_BY BIGINT NOT NULL DEFAULT 1
	  , PRIMARY KEY (PATIENT_SALE_PRODUCT_ID)
	  , CONSTRAINT FK_PATIENT_SALE_PRODUCT_1 FOREIGN KEY (PATIENT_SALE_ID)
	                  REFERENCES PATIENT_SALE (PATIENT_SALE_ID)
	  , CONSTRAINT FK_PATIENT_SALE_PRODUCT_2 FOREIGN KEY (PRODUCT_ID)
	                  REFERENCES PRODUCT (PRODUCT_ID)
	);
	
	CREATE TABLE SALE_RETURN (
	  	SALE_RETURN_ID BIGINT NOT NULL AUTO_INCREMENT
	  , PATIENT_SALE_ID BIGINT NOT NULL
	  , COMMENTS VARCHAR(1000) NOT NULL
	  , RETURN_DATETIME TIMESTAMP NOT NULL
	  , SUB_TOTAL DOUBLE NOT NULL DEFAULT 0
	  , TAXES DOUBLE NOT NULL DEFAULT 0
	  , DISCOUNT DOUBLE NOT NULL DEFAULT 0
	  , GRAND_TOTAL DOUBLE NOT NULL DEFAULT 0
	  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_BY BIGINT NOT NULL DEFAULT 1
	  , STATUS SMALLINT DEFAULT 0
	  , PRIMARY KEY (SALE_RETURN_ID)
	  , CONSTRAINT FK_SALE_RETURN_1 FOREIGN KEY (PATIENT_SALE_ID)
	                  REFERENCES PATIENT_SALE (PATIENT_SALE_ID)
	);
	
	CREATE TABLE SALE_RETURN_PRODUCT (
	  	SALE_RETURN_PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
	  , SALE_RETURN_ID BIGINT NOT NULL
	  , PRODUCT_ID BIGINT NOT NULL
	  , QUANTITY SMALLINT NOT NULL
	  , UNIT_PRICE DOUBLE NOT NULL
	  , DISCOUNT_PERCENTAGE DOUBLE
	  , DISCOUNT_AMOUNT DOUBLE
	  , TOTAL_AMOUNT DOUBLE NOT NULL
	  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	  , MOD_BY BIGINT NOT NULL DEFAULT 1
	  , PRIMARY KEY (SALE_RETURN_PRODUCT_ID)
	  , CONSTRAINT FK_SALE_RETURN_PRODUCT_1 FOREIGN KEY (SALE_RETURN_ID)
	                  REFERENCES SALE_RETURN (SALE_RETURN_ID)
	  , CONSTRAINT FK_SALE_RETURN_PRODUCT_2 FOREIGN KEY (PRODUCT_ID)
	                  REFERENCES PRODUCT (PRODUCT_ID)
	);

CREATE TABLE BIRTH_REPORT (
	   BIRTH_REPORT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , ADMISSION_ID BIGINT 
     , COMMENTS VARCHAR(1000)
     , BIRTH_DATETIME TIMESTAMP NOT NULL
	 , LAST_NAME VARCHAR(50) NOT NULL
	 , FIRST_NAME VARCHAR(50) NOT NULL
	 , MIDDLE_NAME VARCHAR(50)
	 , FATHER_LAST_NAME VARCHAR(50) NOT NULL
	 , FATHER_FIRST_NAME VARCHAR(50) NOT NULL
	 , FATHER_MIDDLE_NAME VARCHAR(50)
	 , MOTHER_LAST_NAME VARCHAR(50)
	 , MOTHER_FIRST_NAME VARCHAR(50)
	 , MOTHER_MIDDLE_NAME VARCHAR(50)
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (BIRTH_REPORT_ID)
     , CONSTRAINT FK_BIRTH_REPORT_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
);

CREATE TABLE DEATH_REPORT (
	   DEATH_REPORT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , ADMISSION_ID BIGINT 
     , COMMENTS VARCHAR(1000)
     , DEATH_DATETIME TIMESTAMP NOT NULL
	 , STATUS SMALLINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1	
     , PRIMARY KEY (DEATH_REPORT_ID)
     , CONSTRAINT FK_DEATH_REPORT_1 FOREIGN KEY (ADMISSION_ID)
                  REFERENCES ADMISSION (ADMISSION_ID)
);

CREATE TABLE REPORT (
       REPORT_ID BIGINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(50) NOT NULL
     , DESCRIPTION TEXT 
     , STATUS TINYINT
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
     , PRIMARY KEY (REPORT_ID)
);


CREATE TABLE ENQUIRY (
	   ENQUIRY_ID BIGINT NOT NULL AUTO_INCREMENT
	 , FIRST_NAME VARCHAR(50) NOT NULL
	 , LAST_NAME VARCHAR(50) NOT NULL
	 , MIDDLE_NAME VARCHAR(50)
	 , ENQUIRY_DATETIME TIMESTAMP NOT NULL
	 , NOTES TEXT NOT NULL
	 , EMAIL VARCHAR(100)
	 , PHONE VARCHAR(20)
	 , IS_READ VARCHAR(1) NOT NULL DEFAULT 'N'
	 , CHECKED_BY BIGINT
	 , STATUS TINYINT
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (ENQUIRY_ID)
	 , CONSTRAINT FK_ENQUIRY_1 FOREIGN KEY (CHECKED_BY)
                  REFERENCES USERS (USER_ID)
);


commit;